<?xml version="1.0" encoding="UTF-8"?>
<web-app id="TacticPerformance" version="2.4"
		 xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

	<display-name>cdl</display-name>
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/applicationContext-*.xml,classpath*:applicationContext.xml,classpath*:**/*-spring.xml
		</param-value>
	</context-param>

	<!-- Hibernate Open Session In View filter -->
	<filter>
		<filter-name>hibernateOpenSessionInViewFilter</filter-name>
		<filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
		<init-param>
			<param-name>singleSession</param-name>
			<param-value>false</param-value>
		</init-param>
	</filter>

	<!-- XSS filter -->
	<filter>
		<filter-name>XSSFilter</filter-name>
		<filter-class>com.ibm.core.filter.XSSFilter</filter-class>
		<init-param>
			<param-name>characterParams</param-name>
			<param-value>',@,|,$</param-value> <!-- 此处加入要过滤的字符或字符串，以逗号隔开 -->
		</init-param>
		<init-param>
			<param-name>checkURLList</param-name>
			<param-value>/*</param-value>
		</init-param>
	</filter>

	<filter>
		<filter-name>characterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<!-- BlowFishFilter filter  -->
	<filter>
		<filter-name>BlowFishFilter</filter-name>
		<filter-class>com.ibm.core.filter.BlowFishFilter</filter-class>
		<init-param>
			<param-name>checkURLList</param-name>
			<param-value>/portal/index.do;/common/index.do;/address/index.do</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>characterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>


	<filter>
		<filter-name>cookieFilter</filter-name>
		<filter-class>com.ibm.core.filter.CookieFilter</filter-class>
	</filter>

	<!-- sqlFilter 拦截sql注入的 filter -->
	<filter>
		<filter-name>sqlFilter</filter-name>
		<filter-class>com.ibm.core.filter.SqlFilter</filter-class>
	</filter>


	<filter-mapping>
		<filter-name>cookieFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.apache.struts2.dispatcher.listener.StrutsListener</listener-class>
	</listener>


	<!-- XSS filter要放在struts过滤器之前，否则无效 -->
	<filter-mapping>
		<filter-name>XSSFilter</filter-name>
		<url-pattern>*.do</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>
	<filter-mapping>
		<filter-name>XSSFilter</filter-name>
		<url-pattern>*.action</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>
	<filter-mapping>
		<filter-name>BlowFishFilter</filter-name>
		<url-pattern>*.do</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>
	<filter-mapping>
		<filter-name>BlowFishFilter</filter-name>
		<url-pattern>*.action</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>
	<filter-mapping>
		<filter-name>sqlFilter</filter-name>
		<url-pattern>*.do</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>
	<filter-mapping>
		<filter-name>sqlFilter</filter-name>
		<url-pattern>*.action</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>
	<!--<filter-mapping>
		<filter-name>DesFilter</filter-name>
		<url-pattern>*.do</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>
	<filter-mapping>
		<filter-name>DesFilter</filter-name>
		<url-pattern>*.action</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>-->
	<filter>
		<filter-name>struts-prepare</filter-name>
		<filter-class>org.apache.struts2.dispatcher.filter.StrutsPrepareFilter</filter-class>
	</filter>
	<filter>
		<filter-name>struts-execute</filter-name>
		<filter-class>org.apache.struts2.dispatcher.filter.StrutsExecuteFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>hibernateOpenSessionInViewFilter</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>struts-prepare</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>struts-execute</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>

	<servlet>
		<servlet-name>JSPSupportServlet</servlet-name>
		<servlet-class>org.apache.struts2.views.JspSupportServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet>
		<servlet-name>CheckCode</servlet-name>
		<servlet-class>com.ibm.core.servlet.CheckCode</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>CheckCode</servlet-name>
		<url-pattern>/captcha/checkcode</url-pattern>
	</servlet-mapping>
	<error-page>
		<error-code>404</error-code>
		<location>/error.html</location>
	</error-page>
	<error-page>
		<error-code>500</error-code>
		<location>/error500.html</location>
	</error-page>
	<session-config>
		<session-timeout>120</session-timeout>
	</session-config>
	<welcome-file-list>
		<welcome-file>/login.jsp</welcome-file>
	</welcome-file-list>
</web-app>
